/**
 * Generated by orval v6.24.0 🍺
 * Do not edit manually.
 * Payout Server API
 * Payout Server API 명세서입니다.
 * OpenAPI spec version: 1.0.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";
import type {
  DividendRequest,
  GetBiggestDividendYieldStocksParams,
  GetUpComingDividendStocksParams,
  MonthlyDividendResponse,
  PortfolioRequest,
  PortfolioResponse,
  SearchStockParams,
  SectorRatioRequest,
  SectorRatioResponse,
  StockDetailResponse,
  StockDividendYieldResponse,
  StockResponse,
  UpcomingDividendResponse,
  YearlyDividendResponse,
} from "./endpoint.schemas";

/**
 * @summary 섹터 비중 분석
 */
export const findSectorRatios = <TData = AxiosResponse<SectorRatioResponse[]>>(
  sectorRatioRequest: SectorRatioRequest,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.post(`/api/stocks/sector-ratio`, sectorRatioRequest, options);
};

/**
 * @summary 포트폴리오 생성
 */
export const createPortfolio = <TData = AxiosResponse<PortfolioResponse>>(
  portfolioRequest: PortfolioRequest,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.post(`/api/portfolios`, portfolioRequest, options);
};

/**
 * @summary 연간 배당금 조회
 */
export const getYearlyDividends = <TData = AxiosResponse<YearlyDividendResponse>>(
  dividendRequest: DividendRequest,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.post(`/api/dividends/yearly`, dividendRequest, options);
};

/**
 * @summary 월별 배당금 조회
 */
export const getMonthlyDividends = <TData = AxiosResponse<MonthlyDividendResponse[]>>(
  dividendRequest: DividendRequest,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.post(`/api/dividends/monthly`, dividendRequest, options);
};

/**
 * @summary 종목 상세 조회
 */
export const getStockByTicker = <TData = AxiosResponse<StockDetailResponse>>(
  ticker: string,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/stocks/${ticker}`, options);
};

/**
 * @summary 티커명/회사명 검색
 */
export const searchStock = <TData = AxiosResponse<StockResponse[]>>(
  params: SearchStockParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/stocks/search`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary 배당락일이 다가오는 주식 리스트
 */
export const getUpComingDividendStocks = <TData = AxiosResponse<UpcomingDividendResponse>>(
  params: GetUpComingDividendStocksParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/stocks/ex-dividend-dates/upcoming`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary 배당수익률이 큰 주식 리스트
 */
export const getBiggestDividendYieldStocks = <TData = AxiosResponse<StockDividendYieldResponse>>(
  params: GetBiggestDividendYieldStocksParams,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/stocks/dividend-yields/highest`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

/**
 * @summary 포트폴리오 기반 연간 배당금 조회
 */
export const getYearlyDividends1 = <TData = AxiosResponse<YearlyDividendResponse>>(
  id: string,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/portfolios/${id}/yearly`, options);
};

/**
 * @summary 섹터 비중 분석
 */
export const getSectorRatios = <TData = AxiosResponse<SectorRatioResponse[]>>(
  id: string,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/portfolios/${id}/sector-ratio`, options);
};

/**
 * @summary 포트폴리오 기반 월간 배당금 조회
 */
export const getMonthlyDividends1 = <TData = AxiosResponse<MonthlyDividendResponse[]>>(
  id: string,
  options?: AxiosRequestConfig
): Promise<TData> => {
  return axios.get(`/api/portfolios/${id}/monthly`, options);
};

export type FindSectorRatiosResult = AxiosResponse<SectorRatioResponse[]>;
export type CreatePortfolioResult = AxiosResponse<PortfolioResponse>;
export type GetYearlyDividendsResult = AxiosResponse<YearlyDividendResponse>;
export type GetMonthlyDividendsResult = AxiosResponse<MonthlyDividendResponse[]>;
export type GetStockByTickerResult = AxiosResponse<StockDetailResponse>;
export type SearchStockResult = AxiosResponse<StockResponse[]>;
export type GetUpComingDividendStocksResult = AxiosResponse<UpcomingDividendResponse>;
export type GetBiggestDividendYieldStocksResult = AxiosResponse<StockDividendYieldResponse>;
export type GetYearlyDividends1Result = AxiosResponse<YearlyDividendResponse>;
export type GetSectorRatiosResult = AxiosResponse<SectorRatioResponse[]>;
export type GetMonthlyDividends1Result = AxiosResponse<MonthlyDividendResponse[]>;
